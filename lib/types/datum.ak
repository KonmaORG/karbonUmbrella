use cardano/assets.{PolicyId}
use types/utils.{AssetClass, Multisig}
use types/wallet.{Wallet}

/// The main configuration datum for the entire protocol.
pub type ConfigDatum {
  /// The wallet address where platform fees are collected.
  fees_address: Wallet,
  /// The amount of the platform fee.
  fees_amount: Int,
  /// The asset class (policy ID and asset name) of the fee token.
  fees_asset_class: AssetClass,
  /// The wallet address for spending-related operations.
  spend_address: Wallet,
  /// A list of supported project categories.
  categories: List<ByteArray>,
  /// The multi-signature group required to validate projects.
  multisig_validator_group: Multisig,
  /// The multi-signature group required to update this configuration datum.
  multisig_refutxoupdate: Multisig,
  /// The policy ID of the Carbon Emission Token (CET).
  cet_policyid: PolicyId,
  /// The policy ID of the Carbon Offsetting Token (COT).
  cot_policyid: PolicyId,
}

/// The datum for a project submitted for validation.
pub type ProjectDatum {
  /// The wallet of the project developer.
  developer: Wallet,
  /// A hash or identifier for the project's documentation.
  document: ByteArray,
  /// The category of the project.
  category: ByteArray,
  /// The asset name for the project's unique NFT.
  asset_name: ByteArray,
  /// The fee amount paid for project submission.
  fees_amount: Int,
  /// The asset class of the fee paid.
  fees_asset_class: AssetClass,
}

/// The datum for an asset listed on the marketplace.
pub type MarketplaceDatum {
  /// The wallet of the asset's owner (the seller).
  owner: Wallet,
  /// The price of the asset in Lovelace.
  amount: Int,
}

/// The datum associated with the minting of Carbon Emission Tokens (CET).
pub type CETDatum {
  /// The geographical location related to the emissions.
  location: ByteArray,
  /// The quantity of CETs to be minted.
  cet_qty: Int,
  /// The timestamp of the emission event.
  time: Int,
}

/// A configuration type holding the policy IDs for CET and COT.
pub type CetCotConfig {
  /// The policy ID of the Carbon Emission Token (CET).
  cet_policyid: PolicyId,
  /// The policy ID of the Carbon Offsetting Token (COT).
  cot_policyid: PolicyId,
}

/// Represents the possible states of a crowdfunding campaign.
pub type CampaignState {
  /// The initial state when a campaign is first created.
  Initiated
  /// The state when a campaign is active and accepting contributions.
  Running
  /// The state when a campaign has been cancelled.
  Cancelled
  /// The state when a campaign has successfully met its goal and ended.
  Finished
  /// The state when funds for a milestone have been released to the creator.
  Released
}

/// A type alias for a list of booleans, representing the completion status of campaign milestones.
pub type Milestone =
  List<Bool>

/// The datum for a crowdfunding campaign.
pub type CampaignDatum {
  /// The name of the campaign.
  name: ByteArray,
  /// The funding goal in Lovelace.
  goal: Int,
  /// The deadline for the campaign, as a POSIX timestamp.
  deadline: Int,
  /// The wallet of the campaign creator.
  creator: Wallet,
  /// A list representing the milestones of the campaign and their completion status.
  milestone: Milestone,
  /// The current state of the campaign.
  state: CampaignState,
  /// The fixed amount of reward tokens distributed per contribution fraction.
  fraction: Int,
}

/// The datum for a campaign backer, represented by their wallet.
pub type BackerDatum =
  Wallet
